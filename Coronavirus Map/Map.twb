<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0319.0943                               -->
<workbook original-version='18.1' source-build='2018.3.5 (20183.19.0319.0943)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CoronavirusInUK' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='UK_Data' inline='true' name='federated.057d8jo02oxl8f14ed53l16nlkxf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CountyUAs_cases_table' name='textscan.0mf5tjw09wk6zm1cfwqqc19hsrwu'>
            <connection class='textscan' directory='C:/Users/Terence Neo/Documents/My Documents/School/University/CCA/Data-Visualisations/Coronavirus Map' filename='CountyUAs_cases_table.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Union' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='City' />
            <column datatype='integer' name='Number of confirmed cases' />
            <column datatype='integer' name='FID' />
            <column datatype='string' name='GSS_CD' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0mf5tjw09wk6zm1cfwqqc19hsrwu' name='Scotland_data.csv' table='[Scotland_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='City' ordinal='0' />
              <column datatype='integer' name='07-Mar' ordinal='1' />
              <column datatype='integer' name='08-Mar' ordinal='2' />
              <column datatype='integer' name='09-Mar' ordinal='3' />
              <column datatype='integer' name='10-Mar' ordinal='4' />
              <column datatype='integer' name='11-Mar' ordinal='5' />
              <column datatype='integer' name='13-Mar' ordinal='6' />
              <column datatype='integer' name='14-Mar' ordinal='7' />
              <column datatype='integer' name='Number of confirmed cases' ordinal='8' />
              <column datatype='string' name='Country' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.0mf5tjw09wk6zm1cfwqqc19hsrwu' name='Wales_data.csv' table='[Wales_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='string' name='City' ordinal='0' />
              <column datatype='integer' name='11-Mar' ordinal='1' />
              <column datatype='integer' name='12-Mar' ordinal='2' />
              <column datatype='integer' name='Number of confirmed cases' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.0mf5tjw09wk6zm1cfwqqc19hsrwu' name='CountyUAs_cases_table.csv' table='[CountyUAs_cases_table#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='integer' name='FID' ordinal='0' />
              <column datatype='string' name='GSS_CD' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='integer' name='07-Mar' ordinal='3' />
              <column datatype='integer' name='08-Mar' ordinal='4' />
              <column datatype='integer' name='09-Mar' ordinal='5' />
              <column datatype='integer' name='10-Mar' ordinal='6' />
              <column datatype='integer' name='11-Mar' ordinal='7' />
              <column datatype='integer' name='13-Mar' ordinal='8' />
              <column datatype='integer' name='14-Mar' ordinal='9' />
              <column datatype='integer' name='Number of confirmed cases' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>07-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[07-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>07-Mar</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>08-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[08-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>08-Mar</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>09-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[09-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>09-Mar</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>10-Mar</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[11-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>11-Mar</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>13-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[13-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>13-Mar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>14-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[14-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>14-Mar</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of confirmed cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of confirmed cases]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Number of confirmed cases</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12-Mar</remote-name>
            <remote-type>20</remote-type>
            <local-name>[12-Mar]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>12-Mar</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FID]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>FID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GSS_CD</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GSS_CD]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>GSS_CD</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]&quot;' value='Latest' />
        </aliases>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Barking and Dagenham&quot;' value='&quot;Barking&quot;' />
          <semantic-value key='&quot;Bath and North East Somerset&quot;' value='&quot;Bath&quot;' />
          <semantic-value key='&quot;Blackburn with Darwen&quot;' value='&quot;Blackburn&quot;' />
          <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
          <semantic-value key='&quot;Bracknell Forest&quot;' value='&quot;Bracknell&quot;' />
          <semantic-value key='&quot;Brent&quot;' value='&quot;Brentford&quot;' />
          <semantic-value key='&quot;Brighton and Hove&quot;' value='&quot;Brighton&quot;' />
          <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
          <semantic-value key='&quot;Buckinghamshire&quot;' value='&quot;Buckingham&quot;' />
          <semantic-value key='&quot;Cambridgeshire&quot;' value='&quot;Cambridge&quot;' />
          <semantic-value key='&quot;Camden&quot;' value='&quot;Camden Town&quot;' />
          <semantic-value key='&quot;Central Bedfordshire&quot;' value='&quot;Bedford&quot;' />
          <semantic-value key='&quot;Cheshire West and Chester&quot;' value='&quot;Chester&quot;' />
          <semantic-value key='&quot;County Durham&quot;' value='&quot;Durham&quot;' />
          <semantic-value key='&quot;Derbyshire&quot;' value='&quot;Derby&quot;' />
          <semantic-value key='&quot;East Riding of Yorkshire&quot;' value='&quot;York&quot;' />
          <semantic-value key='&quot;Gloucestershire&quot;' value='&quot;Gloucester&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='&quot;Anglesey&quot;' value='&quot;Isle of Anglesey&quot;' />
          <semantic-value key='&quot;Ayrshire and Arran&quot;' value='&quot;East Ayrshire&quot;' />
          <semantic-value key='&quot;Borders&quot;' value='&quot;Scottish Borders&quot;' />
          <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
          <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
          <semantic-value key='&quot;Cornwall and Isles of Scilly&quot;' value='&quot;Cornwall&quot;' />
          <semantic-value key='&quot;Forth Valley&quot;' value='&quot;Stirling&quot;' />
          <semantic-value key='&quot;Grampian&quot;' value='&quot;Aberdeenshire&quot;' />
          <semantic-value key='&quot;Greater Glasgow and Clyde&quot;' value='&quot;Glasgow&quot;' />
          <semantic-value key='&quot;Herefordshire, County of&quot;' value='&quot;Herefordshire&quot;' />
          <semantic-value key='&quot;Kingston upon Hull, City of&quot;' value='&quot;Kingston upon Hull&quot;' />
          <semantic-value key='&quot;Lanarkshire&quot;' value='&quot;South Lanarkshire&quot;' />
          <semantic-value key='&quot;Lothian&quot;' value='&quot;Edinburgh&quot;' />
          <semantic-value key='&quot;Tayside&quot;' value='&quot;Dundee&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[GSS_CD]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Number of confirmed cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Table Name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;CountyUAs_cases_table.csv&quot;' value='&quot;England&quot;' />
          <semantic-value key='&quot;Scotland_data.csv&quot;' value='&quot;Scotland&quot;' />
          <semantic-value key='&quot;Wales_data.csv&quot;' value='&quot;Wales&quot;' />
        </semantic-values>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of confirmed cases]' derivation='Sum' name='[sum:Number of confirmed cases:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City,Table Name)' hidden='true' name='[Action (City,Table Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Table Name]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Terence Neo/Documents/My Documents/School/University/CCA/Data-Visualisations/Coronavirus Map/UK_Data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/15/2020 10:28:59 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='174' timestamp-start='2020-03-15 22:28:59.081' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>0</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>07-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[07-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>07-Mar</remote-alias>
              <ordinal>1</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>08-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[08-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>08-Mar</remote-alias>
              <ordinal>2</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>09-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[09-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>09-Mar</remote-alias>
              <ordinal>3</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>10-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[10-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>10-Mar</remote-alias>
              <ordinal>4</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>11-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[11-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>11-Mar</remote-alias>
              <ordinal>5</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>13-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[13-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>13-Mar</remote-alias>
              <ordinal>6</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>14-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[14-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>14-Mar</remote-alias>
              <ordinal>7</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of confirmed cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of confirmed cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of confirmed cases</remote-alias>
              <ordinal>8</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>9</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>12-Mar</remote-name>
              <remote-type>20</remote-type>
              <local-name>[12-Mar]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>12-Mar</remote-alias>
              <ordinal>10</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FID</remote-alias>
              <ordinal>11</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>150</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GSS_CD</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GSS_CD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GSS_CD</remote-alias>
              <ordinal>12</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>13</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.357143' measure-ordering='alphabetic' measure-percentage='0.642857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='&quot;Wales&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='UK_Data' name='federated.057d8jo02oxl8f14ed53l16nlkxf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.057d8jo02oxl8f14ed53l16nlkxf'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Barking and Dagenham&quot;' value='&quot;Barking&quot;' />
                <semantic-value key='&quot;Bath and North East Somerset&quot;' value='&quot;Bath&quot;' />
                <semantic-value key='&quot;Blackburn with Darwen&quot;' value='&quot;Blackburn&quot;' />
                <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bracknell Forest&quot;' value='&quot;Bracknell&quot;' />
                <semantic-value key='&quot;Brent&quot;' value='&quot;Brentford&quot;' />
                <semantic-value key='&quot;Brighton and Hove&quot;' value='&quot;Brighton&quot;' />
                <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Buckinghamshire&quot;' value='&quot;Buckingham&quot;' />
                <semantic-value key='&quot;Cambridgeshire&quot;' value='&quot;Cambridge&quot;' />
                <semantic-value key='&quot;Camden&quot;' value='&quot;Camden Town&quot;' />
                <semantic-value key='&quot;Central Bedfordshire&quot;' value='&quot;Bedford&quot;' />
                <semantic-value key='&quot;Cheshire West and Chester&quot;' value='&quot;Chester&quot;' />
                <semantic-value key='&quot;County Durham&quot;' value='&quot;Durham&quot;' />
                <semantic-value key='&quot;Derbyshire&quot;' value='&quot;Derby&quot;' />
                <semantic-value key='&quot;East Riding of Yorkshire&quot;' value='&quot;York&quot;' />
                <semantic-value key='&quot;Gloucestershire&quot;' value='&quot;Gloucester&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Anglesey&quot;' value='&quot;Isle of Anglesey&quot;' />
                <semantic-value key='&quot;Ayrshire and Arran&quot;' value='&quot;East Ayrshire&quot;' />
                <semantic-value key='&quot;Borders&quot;' value='&quot;Scottish Borders&quot;' />
                <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cornwall and Isles of Scilly&quot;' value='&quot;Cornwall&quot;' />
                <semantic-value key='&quot;Forth Valley&quot;' value='&quot;Stirling&quot;' />
                <semantic-value key='&quot;Grampian&quot;' value='&quot;Aberdeenshire&quot;' />
                <semantic-value key='&quot;Greater Glasgow and Clyde&quot;' value='&quot;Glasgow&quot;' />
                <semantic-value key='&quot;Herefordshire, County of&quot;' value='&quot;Herefordshire&quot;' />
                <semantic-value key='&quot;Kingston upon Hull, City of&quot;' value='&quot;Kingston upon Hull&quot;' />
                <semantic-value key='&quot;Lanarkshire&quot;' value='&quot;South Lanarkshire&quot;' />
                <semantic-value key='&quot;Lothian&quot;' value='&quot;Edinburgh&quot;' />
                <semantic-value key='&quot;Tayside&quot;' value='&quot;Dundee&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of confirmed cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;CountyUAs_cases_table.csv&quot;' value='&quot;England&quot;' />
                <semantic-value key='&quot;Scotland_data.csv&quot;' value='&quot;Scotland&quot;' />
                <semantic-value key='&quot;Wales_data.csv&quot;' value='&quot;Wales&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of confirmed cases]' derivation='Sum' name='[sum:Number of confirmed cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Longitude (generated)]' field-type='quantitative' max='346380.51057143754' min='-838948.38241465692' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Latitude (generated)]' field-type='quantitative' max='7456823.143566303' min='6402389.4657565877' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1' field='[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]' max='41' min='0' num-steps='18' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#d76b6b</color>
                <color>#d50000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]' />
              <text column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]' />
              <lod column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:City:nk]' />
              <lod column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Table Name:nk]' />
              <geometry column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.057d8jo02oxl8f14ed53l16nlkxf].[Latitude (generated)]</rows>
        <cols>[federated.057d8jo02oxl8f14ed53l16nlkxf].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='UK_Data' name='federated.057d8jo02oxl8f14ed53l16nlkxf' />
          </datasources>
          <datasource-dependencies datasource='federated.057d8jo02oxl8f14ed53l16nlkxf'>
            <column datatype='integer' name='[07-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[08-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[09-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[10-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[11-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[12-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[13-Mar]' role='measure' type='quantitative' />
            <column datatype='integer' name='[14-Mar]' role='measure' type='quantitative' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Barking and Dagenham&quot;' value='&quot;Barking&quot;' />
                <semantic-value key='&quot;Bath and North East Somerset&quot;' value='&quot;Bath&quot;' />
                <semantic-value key='&quot;Blackburn with Darwen&quot;' value='&quot;Blackburn&quot;' />
                <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bracknell Forest&quot;' value='&quot;Bracknell&quot;' />
                <semantic-value key='&quot;Brent&quot;' value='&quot;Brentford&quot;' />
                <semantic-value key='&quot;Brighton and Hove&quot;' value='&quot;Brighton&quot;' />
                <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Buckinghamshire&quot;' value='&quot;Buckingham&quot;' />
                <semantic-value key='&quot;Cambridgeshire&quot;' value='&quot;Cambridge&quot;' />
                <semantic-value key='&quot;Camden&quot;' value='&quot;Camden Town&quot;' />
                <semantic-value key='&quot;Central Bedfordshire&quot;' value='&quot;Bedford&quot;' />
                <semantic-value key='&quot;Cheshire West and Chester&quot;' value='&quot;Chester&quot;' />
                <semantic-value key='&quot;County Durham&quot;' value='&quot;Durham&quot;' />
                <semantic-value key='&quot;Derbyshire&quot;' value='&quot;Derby&quot;' />
                <semantic-value key='&quot;East Riding of Yorkshire&quot;' value='&quot;York&quot;' />
                <semantic-value key='&quot;Gloucestershire&quot;' value='&quot;Gloucester&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Anglesey&quot;' value='&quot;Isle of Anglesey&quot;' />
                <semantic-value key='&quot;Ayrshire and Arran&quot;' value='&quot;East Ayrshire&quot;' />
                <semantic-value key='&quot;Borders&quot;' value='&quot;Scottish Borders&quot;' />
                <semantic-value key='&quot;Bournemouth, Christchurch and Poole&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bristol, City of&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cornwall and Isles of Scilly&quot;' value='&quot;Cornwall&quot;' />
                <semantic-value key='&quot;Forth Valley&quot;' value='&quot;Stirling&quot;' />
                <semantic-value key='&quot;Grampian&quot;' value='&quot;Aberdeenshire&quot;' />
                <semantic-value key='&quot;Greater Glasgow and Clyde&quot;' value='&quot;Glasgow&quot;' />
                <semantic-value key='&quot;Herefordshire, County of&quot;' value='&quot;Herefordshire&quot;' />
                <semantic-value key='&quot;Kingston upon Hull, City of&quot;' value='&quot;Kingston upon Hull&quot;' />
                <semantic-value key='&quot;Lanarkshire&quot;' value='&quot;South Lanarkshire&quot;' />
                <semantic-value key='&quot;Lothian&quot;' value='&quot;Edinburgh&quot;' />
                <semantic-value key='&quot;Tayside&quot;' value='&quot;Dundee&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of confirmed cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;CountyUAs_cases_table.csv&quot;' value='&quot;England&quot;' />
                <semantic-value key='&quot;Scotland_data.csv&quot;' value='&quot;Scotland&quot;' />
                <semantic-value key='&quot;Wales_data.csv&quot;' value='&quot;Wales&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[07-Mar]' derivation='Sum' name='[sum:07-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[08-Mar]' derivation='Sum' name='[sum:08-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[09-Mar]' derivation='Sum' name='[sum:09-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[10-Mar]' derivation='Sum' name='[sum:10-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11-Mar]' derivation='Sum' name='[sum:11-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12-Mar]' derivation='Sum' name='[sum:12-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13-Mar]' derivation='Sum' name='[sum:13-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14-Mar]' derivation='Sum' name='[sum:14-Mar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of confirmed cases]' derivation='Sum' name='[sum:Number of confirmed cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:07-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:08-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:09-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:10-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:11-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:12-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:13-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:14-Mar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Action (City,Table Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Table Name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.057d8jo02oxl8f14ed53l16nlkxf].[:Measure Names]</column>
            <column>[federated.057d8jo02oxl8f14ed53l16nlkxf].[Action (City,Table Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Multiple Values]' scope='rows' value='Number of Confirmed Cases' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]' />
              <text column='[federated.057d8jo02oxl8f14ed53l16nlkxf].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.057d8jo02oxl8f14ed53l16nlkxf].[Multiple Values]</rows>
        <cols>[federated.057d8jo02oxl8f14ed53l16nlkxf].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='69500' x='800' y='1000'>
              <zone h='98000' id='1' name='Map' w='69500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='289' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='28900' x='70300' y='1000'>
              <zone h='9125' id='6' name='Map' pane-specification-id='0' param='[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]' type='color' w='28900' x='70300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='3625' id='7' type='text' w='28900' x='70300' y='10125'>
                <formatted-text>
                  <run>Shift-click to move around map&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='11500' id='8' type='text' w='28900' x='70300' y='13750'>
                <formatted-text>
                  <run>Datasets CAA:&#10;England: 15/3/20&#10;Scotland: 15/3/20&#10;Wales: 13/3/20</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='64375' id='9' name='Trend' w='28900' x='70300' y='25250'>
                <layout-cache cell-count-w='9' minheight='210' non-cell-size-w='77' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='67' h='9375' id='10' is-fixed='true' name='Trend' pane-specification-id='0' param='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]' type='color' w='28900' x='70300' y='89625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{39477DD4-BE6D-47CF-9D6C-ACDC150D76EB}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:City (Scotland_data.csv+):nk]</field>
            <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:City:nk]</field>
            <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[sum:Number of confirmed cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFC5E43E-D45B-4F81-B5DD-CCB830D4C070}' />
    </window>
    <window class='worksheet' name='Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:City:nk]</field>
            <field>[federated.057d8jo02oxl8f14ed53l16nlkxf].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BDEF1B7-AE8C-4861-A0A3-33B2D2618FA8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
